@page "/ViewDogs/{CustomerId:int}"
@using JustinaSystem.BLL
@using JustinaSystem.ViewModels
@using MatBlazor
@inject IJSRuntime JSRuntime
@inject JustinaServices _services
@inject DogServices _dogServices
@inject NavigationManager NavigationManager

@foreach (var dog in dogs)
{
    <div class="dogContainer">
       @*  <RadzenCard class="rz-my-12" style="flex-grow: 1; border-radius: 15px; width: 100%;"> *@
        <div class="dogCard">
            <RadzenCard class="rz-my-12" style="border-radius: 15px; width: 100%;" @onclick="() => NavigateToDogDetail(dog.DogId)">
                <h6>Dog Information</h6>
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" Class="rz-p-4 dogStack">
                    <RadzenImage Path="/images/dog.webp" Style="max-width: 100px; height: auto; border-radius: 50%;" />
                    <RadzenStack Gap="0">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Name</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@dog.DogName</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Allergies</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@dog.HasAllergies</b></RadzenText>
                    </RadzenStack>
                </RadzenStack>
            </RadzenCard>
       </div>
    </div>
}


@code {
    Variant variant = Variant.Outlined;
    protected List<DogView> dogs = new List<DogView>();
    [Parameter]
    public int customerId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await GetDogs();
    }

    private async Task GetDogs()
    {
        dogs =  _dogServices.ViewDogs(customerId);
    }

    private void NavigateToDogDetail(int dogId)
        {
            NavigationManager.NavigateTo($"JustinaPages/DogDetail/{dogId}");
        }
    
}
